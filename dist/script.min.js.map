{"version":3,"sources":["script.js"],"names":["formatarCEP","input","cep","value","replace","slice","calcularFrete","origem","destinoElement","document","getElementById","trim","peso","comprimento","altura","largura","alert","axios","post","destino","console","log","response","data","mostrarResultado","error","_context","t0","message","concat","resultadoDiv","innerHTML","dadosFrete","length","forEach","opcao","transportadora","prazo","valor","freteInfo","toFixed"],"mappings":"aAAA,SAASA,YAAYC,GACjB,IAAIC,EAAMD,EAAME,MAAMC,QAAQ,MAAO,IADpBH,EAArBC,EAASF,SACDE,EAAMD,EAAME,MAAMC,EAAAA,GAAQ,IAApBF,EAAVG,MAAA,EAAA,IAEIH,EAAMA,MAAIG,EAGdJ,SAAAK,gBAAAL,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,GACHM,EAAA,WAISC,EAAiBC,SAASC,eAAe,cAFpCJ,EAAAA,EAAfE,EAAAL,MAAAQ,OAAA,GAAAC,EAAA,IAAAC,EAAAC,EAAAC,EAAA,KAEUP,EALNP,CAAAA,EAAAA,KAAAA,GAAAA,MAAAA,OAcIe,MAAM,+CAdVf,EAAAA,OAAAA,UAAAA,KAAAA,GAAAA,OAAAA,EAAAA,KAAAA,GAAAA,EAAAA,KAAAA,GAAAA,mBAAAA,MAGJgB,MAAAC,KAAA,uCAAA,CAQUL,OAAAA,EAUEM,QAAAA,EAlBZP,KAAAA,EAAAG,QAAAA,EAAAD,OAAAA,EAAAD,YAAAA,KAHIZ,KAAAA,GAUMa,EAVNb,EAAAA,KAGJmB,QAAAC,IAAA,mBAAAC,EAAAC,MA0BQC,iBAAiBF,EAASC,MA7B9BtB,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,GAAAA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,IAGJmB,QAAAK,MAAA,4BAAAC,EAAAC,GAAAL,SAAAI,EAAAC,GAAAL,SAAAC,KAAAG,EAAAC,GAAAC,SAAAZ,MAAA,6BAAAa,OAAAH,EAAAC,GAAAL,SAAAI,EAAAC,GAAAL,SAAAC,KAAAK,QAAAF,EAAAC,GAAAC,UAHI3B,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,KAAAA,KAAAA,CAAAA,CAAAA,GAAAA,MAuBQc,SAAAA,iBAAAA,GACAD,IAAAA,EAAAA,SALsEJ,eAAA,aAAAoB,EAhBlFC,UAAA,GAAAC,GAAA,IAAAA,EAAAC,OAAAD,EAAAE,QAAA,SAAAC,GAAA,IA6CgBC,EAAiCD,EAAjCC,eAAgBC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,MA7CvCC,EAAA,oCAAAV,OAAAO,EAAA,2CAAAP,OA4BsBQ,EA5BtB,iDAAAR,OA6BaS,EAAAE,QAAA,GA7Bb,oCAAAV,EAAAC,WAAAQ,IAgBcjB,EAhBdS,UAAA","file":"script.min.js","sourcesContent":["function formatarCEP(input) {\r\n    let cep = input.value.replace(/\\D/g, '');\r\n    if (cep.length > 5) {\r\n        cep = cep.slice(0, 5) + '-' + cep.slice(5, 8);\r\n    }\r\n\r\n    input.value = cep;\r\n}\r\n\r\nasync function calcularFrete() {\r\n    const origem = '85819280';\r\n    const destinoElement = document.getElementById('cepDestino');  // Obtemos o elemento\r\n    const destino = destinoElement ? destinoElement.value.trim() : '';  // Verificamos se o elemento existe e obtemos seu valor\r\n\r\n    const peso = '1';\r\n    const largura = '10';\r\n    const altura = '10';\r\n    const comprimento = '10';\r\n\r\n    if (!destino) {\r\n        alert('Por favor, insira um CEP de destino válido.');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const response = await axios.post('http://localhost:3000/calcular-frete', {\r\n            origem,\r\n            destino,\r\n            peso,\r\n            largura,\r\n            altura,\r\n            comprimento\r\n        });\r\n\r\n        console.log('Resposta da API:', response.data);\r\n        mostrarResultado(response.data);\r\n    } catch (error) {\r\n        console.error('Erro ao calcular o frete:', error.response ? error.response.data : error.message);\r\n        alert(`Erro ao calcular o frete: ${error.response ? error.response.data.message : error.message}`);\r\n    }\r\n}\r\n\r\n\r\nfunction mostrarResultado(dadosFrete) {\r\n    const resultadoDiv = document.getElementById('resultado');\r\n\r\n    resultadoDiv.innerHTML = '';\r\n\r\n    if (!dadosFrete || dadosFrete.length === 0) {\r\n        resultadoDiv.innerHTML = 'Não foi possível obter opções de frete.';\r\n        return;\r\n    }\r\n\r\n    dadosFrete.forEach(opcao => {\r\n        const { transportadora, prazo, valor } = opcao;\r\n\r\n        const freteInfo = `\r\n            <p>Transportadora: ${transportadora}</p>\r\n            <p>Prazo de Entrega: ${prazo} dias</p>\r\n            <p>Valor do Frete: R$ ${valor.toFixed(2)}</p>\r\n            <hr>\r\n        `;\r\n        resultadoDiv.innerHTML += freteInfo;\r\n    });\r\n}"]}