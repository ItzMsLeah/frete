{"version":3,"sources":["script.js"],"names":["formatarCEP","input","cep","value","replace","slice","calcularFrete","origem","destinoElement","document","getElementById","trim","peso","comprimento","altura","largura","alert","axios","post","destino","console","log","response","data","mostrarResultado","error","_context","t0","message","concat","resultados","innerHTML","dadosFrete","opcoes","Array","isArray","forEach","opcao","divTransportadora","createElement","classList","add","transportadora","textContent","appendChild","prazo","valor","toFixed","style","marginBottom"],"mappings":"aAAA,SAASA,YAAYC,GACjB,IAAIC,EAAMD,EAAME,MAAMC,QAAQ,MAAO,IADpBH,EAArBC,EAASF,SACDE,EAAMD,EAAME,MAAMC,EAAAA,GAAQ,IAApBF,EAAVG,MAAA,EAAA,IAEIH,EAAMA,MAAIG,EAGdJ,SAAAK,gBAAAL,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,GACHM,EAAA,WAISC,EAAiBC,SAASC,eAAe,cAFpCJ,EAAAA,EAAfE,EAAAL,MAAAQ,OAAA,GAAAC,EAAA,IAAAC,EAAAC,EAAAC,EAAA,KAEUP,EALNP,CAAAA,EAAAA,KAAAA,GAAAA,MAAAA,OAcIe,MAAM,+CAdVf,EAAAA,OAAAA,UAAAA,KAAAA,GAAAA,OAAAA,EAAAA,KAAAA,GAAAA,EAAAA,KAAAA,GAAAA,mBAAAA,MAGJgB,MAAAC,KAAA,uCAAA,CAQUL,OAAAA,EAUEM,QAAAA,EAlBZP,KAAAA,EAAAG,QAAAA,EAAAD,OAAAA,EAAAD,YAAAA,KAHIZ,KAAAA,GAUMa,EAVNb,EAAAA,KAGJmB,QAAAC,IAAA,mBAAAC,EAAAC,MA0BQC,iBAAiBF,EAASC,MA7B9BtB,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,GAAAA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,IAGJmB,QAAAK,MAAA,4BAAAC,EAAAC,GAAAL,SAAAI,EAAAC,GAAAL,SAAAC,KAAAG,EAAAC,GAAAC,SAAAZ,MAAA,6BAAAa,OAAAH,EAAAC,GAAAL,SAAAI,EAAAC,GAAAL,SAAAC,KAAAK,QAAAF,EAAAC,GAAAC,UAHI3B,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,KAAAA,KAAAA,CAAAA,CAAAA,GAAAA,MAuBQc,SAAAA,iBAAAA,GACAD,IAAAA,EAAAA,SALsEJ,eAAA,cAAAoB,GAsB1EA,EAAWC,UAAY,GAtBjBT,GAhBdU,EAAAC,QAAAC,MAAAC,QAAAH,EAAAC,QAyBQb,EAAYa,OAAAG,QAAA,SAAAC,GAzBpB,IAAAC,EAAA7B,SAAA8B,cAAA,OAAAD,EAAAE,UAAAC,IAAA,eAAA,IAAAC,EAAAjC,SAAA8B,cAAA,KAAAG,EAAAC,YAAA,mBAAAd,OAAAQ,EAAAK,gBA4BQtB,EAAcwB,YAAAF,GA5BtB,IAAAG,EAAApC,SAAA8B,cAAA,KAAAM,EAAAF,YAAA,qBAAAd,OAAAQ,EAAAQ,MAAA,SAAAP,EAAAM,YAAAC,GAAA,IAAAC,EAAArC,SAAA8B,cAAA,KAAAO,EAAAH,YAAA,YAAAd,OAAAQ,EAAAS,MAAAC,QAAA,IA2DgBT,EAAkBM,YAAYE,GAG9BR,EAAkBU,MAAMC,aAAe,OAGvCnB,EAAWc,YAAYN,MAvBvBlB,QAAAK,MAAA,gCAAAO,GACMM,MAAAA,6CA6BdlB,QAAQK,MAAM","file":"script.min.js","sourcesContent":["function formatarCEP(input) {\r\n    let cep = input.value.replace(/\\D/g, '');\r\n    if (cep.length > 5) {\r\n        cep = cep.slice(0, 5) + '-' + cep.slice(5, 8);\r\n    }\r\n\r\n    input.value = cep;\r\n}\r\n\r\nasync function calcularFrete() {\r\n    const origem = '85819280';\r\n    const destinoElement = document.getElementById('cepDestino');  // Obtemos o elemento\r\n    const destino = destinoElement ? destinoElement.value.trim() : '';  // Verificamos se o elemento existe e obtemos seu valor\r\n\r\n    const peso = '1';\r\n    const largura = '10';\r\n    const altura = '10';\r\n    const comprimento = '10';\r\n\r\n    if (!destino) {\r\n        alert('Por favor, insira um CEP de destino válido.');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const response = await axios.post('http://localhost:3000/calcular-frete', {\r\n            origem,\r\n            destino,\r\n            peso,\r\n            largura,\r\n            altura,\r\n            comprimento\r\n        });\r\n\r\n        console.log('Resposta da API:', response.data);\r\n        mostrarResultado(response.data);\r\n    } catch (error) {\r\n        console.error('Erro ao calcular o frete:', error.response ? error.response.data : error.message);\r\n        alert(`Erro ao calcular o frete: ${error.response ? error.response.data.message : error.message}`);\r\n    }\r\n}\r\n\r\n\r\nfunction mostrarResultado(dadosFrete) {\r\n    const resultados = document.getElementById('resultados');\r\n\r\n    if (resultados) {\r\n        resultados.innerHTML = ''; // Limpar resultados anteriores\r\n\r\n        if (dadosFrete && dadosFrete.opcoes && Array.isArray(dadosFrete.opcoes)) {\r\n            dadosFrete.opcoes.forEach(opcao => {\r\n                // Criar uma nova div para cada transportadora\r\n                const divTransportadora = document.createElement('div');\r\n                divTransportadora.classList.add('opcao-frete'); // Classe para estilização\r\n\r\n                // Criar e adicionar informações de transportadora\r\n                const transportadora = document.createElement('p');\r\n                transportadora.textContent = `Transportadora: ${opcao.transportadora}`;\r\n                divTransportadora.appendChild(transportadora);\r\n\r\n                // Criar e adicionar informações de prazo de entrega\r\n                const prazo = document.createElement('p');\r\n                prazo.textContent = `Prazo de Entrega: ${opcao.prazo} dias`;\r\n                divTransportadora.appendChild(prazo);\r\n\r\n                // Criar e adicionar informações de valor de frete\r\n                const valor = document.createElement('p');\r\n                valor.textContent = `Valor: R$${opcao.valor.toFixed(2)}`;\r\n                divTransportadora.appendChild(valor);\r\n\r\n                // Estilização opcional: adicionar margem entre as opções\r\n                divTransportadora.style.marginBottom = '20px';\r\n\r\n                // Adicionar a div da transportadora ao contêiner de resultados\r\n                resultados.appendChild(divTransportadora);\r\n            });\r\n        } else {\r\n            console.error(\"Formato de resposta inválido:\", dadosFrete);\r\n            alert('Não foi possível obter opções de frete.');\r\n        }\r\n    } else {\r\n        console.error(\"Elemento 'resultados' não encontrado.\");\r\n    }\r\n}"]}